package it.prisma.dal.entities.paas.services.appaas;

// Generated 17-set-2014 21.25.53 by Hibernate Tools 3.4.0.CR1

import it.prisma.dal.entities.paas.services.AbstractPaaSService;
import it.prisma.dal.entities.paas.services.PaaSService;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * AppaaSenvironment generated by hbm2java
 */
@Entity
@Table(name = "APPaaSEnvironment")
public class AppaaSEnvironment extends AbstractPaaSService implements
		java.io.Serializable {

	public enum Status {
		DEPLOY_PENDING, DEPLOY_IN_PROGRESS, RUNNING, ERROR, UNDEPLOY_IN_PROGRESS
	}

	/**
	 * 
	 */
	private static final long serialVersionUID = -3170855726148685751L;
	private Long appaaSenvironmentId;
	private PaaSService paaSService;
	private PaaSService appaaS;
	private String serverType;
	private ApplicationRepositoryEntry applicationRepositoryEntry;
	private Set<AppaaSAppFileHistory> appaaSappFileHistories = new HashSet<AppaaSAppFileHistory>(
			0);

	public AppaaSEnvironment() {
	}

	public AppaaSEnvironment(
			ApplicationRepositoryEntry applicationRepositoryEntry,
			PaaSService paaSService, String serverType) {
		this.applicationRepositoryEntry = applicationRepositoryEntry;
		this.paaSService = paaSService;
		this.serverType = serverType;
	}

	public AppaaSEnvironment(
			ApplicationRepositoryEntry applicationRepositoryEntry,
			PaaSService paaSService, String serverType,
			Set<AppaaSAppFileHistory> APPaaSAppFileHistories) {
		this.applicationRepositoryEntry = applicationRepositoryEntry;
		this.paaSService = paaSService;
		this.serverType = serverType;
		this.appaaSappFileHistories = APPaaSAppFileHistories;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "paaSService"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "APPaaSEnvironmentID", unique = true, nullable = false)
	public Long getId() {
		return this.appaaSenvironmentId;
	}

	public void setId(Long appaaSenvironmentId) {
		this.appaaSenvironmentId = appaaSenvironmentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "currentAppFile_ApplicationRepositoryEntryID", nullable = false)
	public ApplicationRepositoryEntry getApplicationRepositoryEntry() {
		return this.applicationRepositoryEntry;
	}

	public void setApplicationRepositoryEntry(
			ApplicationRepositoryEntry applicationRepositoryEntry) {
		this.applicationRepositoryEntry = applicationRepositoryEntry;
	}

	@OneToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "APPaaSID", nullable = false)
	public PaaSService getAppaaS() {
		return this.appaaS;
	}

	public void setAppaaS(PaaSService appaaS) {
		this.appaaS = appaaS;
	}

	@OneToOne(fetch = FetchType.EAGER)
	@PrimaryKeyJoinColumn
	public PaaSService getPaaSService() {
		return this.paaSService;
	}

	public void setPaaSService(PaaSService paaSService) {
		this.paaSService = paaSService;
	}

	@Column(name = "serverType", nullable = false, length = 64)
	public String getServerType() {
		return this.serverType;
	}

	public void setServerType(String serverType) {
		this.serverType = serverType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appaaSenvironment")
	public Set<AppaaSAppFileHistory> getAppaaSappFileHistories() {
		return this.appaaSappFileHistories;
	}

	public void setAppaaSappFileHistories(
			Set<AppaaSAppFileHistory> appaaSappFileHistories) {
		this.appaaSappFileHistories = appaaSappFileHistories;
	}

}
