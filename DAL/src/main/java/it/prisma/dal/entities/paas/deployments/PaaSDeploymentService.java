package it.prisma.dal.entities.paas.deployments;

// Generated 17-set-2014 21.25.53 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;
import it.prisma.dal.entities.monitoring.AtomicService;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * PaaSdeploymentService generated by hbm2java
 */
@Entity
@Table(name = "PaaSDeploymentService")
public class PaaSDeploymentService implements java.io.Serializable {

	public enum PaaSDeploymentServiceType {
		LB_APACHE, DB_MySQL, DB_POSTGRE, WS_APACHE_HTTPD, AS_JBOSS, AS_TOMCAT, AS_GLASSFISH, MQ_RABBITMQ, VM_LINUX, EX_PENTAHO, RD_X2GO;
	}

	/**
	 * 
	 */
	private static final long serialVersionUID = 4074945393208520605L;
	private Long paaSdeploymentServiceId;
	private PaaSDeployment paaSdeployment;
	private String name;
	private String type;
	private String status;
	private Integer plannedInstances;
	private Integer currentInstances;
	//private Set<AtomicService> atomicServices = new HashSet<AtomicService>(0);
	private Set<PaaSDeploymentServiceInstance> paaSdeploymentServiceInstances = new HashSet<PaaSDeploymentServiceInstance>(
			0);

	public PaaSDeploymentService() {
	}

	public PaaSDeploymentService(PaaSDeployment paaSDeployment, String name,
			String type) {
		this.paaSdeployment = paaSDeployment;
		this.name = name;
		this.type = type;
	}

	public PaaSDeploymentService(PaaSDeployment paaSDeployment, String name,
			String type, String status, Integer plannedInstances,
			Integer currentInstances,
			Set<PaaSDeploymentServiceInstance> paaSDeploymentServiceInstances) {
		this.paaSdeployment = paaSDeployment;
		this.name = name;
		this.type = type;
		this.status = status;
		this.plannedInstances = plannedInstances;
		this.currentInstances = currentInstances;
		this.paaSdeploymentServiceInstances = paaSDeploymentServiceInstances;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "PaaSDeploymentServiceID", unique = true, nullable = false)
	public Long getId() {
		return this.paaSdeploymentServiceId;
	}

	public void setId(Long paaSdeploymentServiceId) {
		this.paaSdeploymentServiceId = paaSdeploymentServiceId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PaaSDeploymentID", nullable = false)
	@JsonBackReference
	public PaaSDeployment getPaaSDeployment() {
		return this.paaSdeployment;
	}

	public void setPaaSDeployment(PaaSDeployment paaSdeployment) {
		this.paaSdeployment = paaSdeployment;
	}

	@Column(name = "name", nullable = false, length = 256)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "type", nullable = false, length = 256)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "status", length = 128)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "plannedInstances")
	public Integer getPlannedInstances() {
		return this.plannedInstances;
	}

	public void setPlannedInstances(Integer plannedInstances) {
		this.plannedInstances = plannedInstances;
	}

	@Column(name = "currentInstances")
	public Integer getCurrentInstances() {
		return this.currentInstances;
	}

	public void setCurrentInstances(Integer currentInstances) {
		this.currentInstances = currentInstances;
	}
	
//	@OneToMany(fetch = FetchType.LAZY)
//	@JoinColumn(name = "AtomicServiceID", nullable = false)
//	@JsonBackReference
//	public Set<AtomicService> getAtomicService() {
//		return this.atomicServices;
//	}
//
//	public void setAtomicService(Set<AtomicService> atomicServices) {
//		this.atomicServices = atomicServices;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paaSDeploymentService", cascade = CascadeType.ALL)
	@JsonManagedReference
	public Set<PaaSDeploymentServiceInstance> getPaaSDeploymentServiceInstances() {
		return this.paaSdeploymentServiceInstances;
	}

	public void setPaaSDeploymentServiceInstances(
			Set<PaaSDeploymentServiceInstance> paaSdeploymentServiceInstances) {
		this.paaSdeploymentServiceInstances = paaSdeploymentServiceInstances;
	}

}
