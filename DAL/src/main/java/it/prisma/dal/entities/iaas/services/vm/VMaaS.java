package it.prisma.dal.entities.iaas.services.vm;

// Generated Nov 26, 2014 3:32:36 PM by Hibernate Tools 3.4.0.CR1

import it.prisma.dal.entities.iaas.services.IaaSNetwork;
import it.prisma.dal.entities.iaas.services.IaaSSecurityGroup;
import it.prisma.dal.entities.paas.services.AbstractPaaSService;
import it.prisma.dal.entities.paas.services.PaaSService;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * VMaaS generated by hbm2java
 */
@Entity
@Table(name = "VMaaS")
public class VMaaS extends AbstractPaaSService implements java.io.Serializable {

	private static final long serialVersionUID = 6664131271854876305L;

	private long Id;
	private PaaSService paaSService;
	private boolean horizontalScalingEnabled;
	private Integer horizontalScaling;
	private int volumeSize;
	private String imageName;
	private String keyPairName;

    private Set<IaaSNetwork> iaaSNetworks = new HashSet<IaaSNetwork>(0);

	private Set<IaaSSecurityGroup> iaaSSecurityGroups = new HashSet<IaaSSecurityGroup>(
			0);

	public VMaaS() {
	}

	public VMaaS(PaaSService paaSService, boolean horizontalScalingEnabled,
			int volumeSize) {
		this.paaSService = paaSService;
		this.horizontalScalingEnabled = horizontalScalingEnabled;
		this.volumeSize = volumeSize;
	}

	public VMaaS(PaaSService paaSService, boolean horizontalScalingEnabled,
			Integer horizontalScaling, int volumeSize, String imageName,
			String keyPairName, Set<IaaSNetwork> iaasNetworks,
			Set<IaaSSecurityGroup> iaaSSecurityGroups) {
		this.paaSService = paaSService;
		this.horizontalScalingEnabled = horizontalScalingEnabled;
		this.horizontalScaling = horizontalScaling;
		this.volumeSize = volumeSize;
		this.imageName = imageName;
		this.keyPairName = keyPairName;
		this.iaaSNetworks = iaasNetworks;
		this.iaaSSecurityGroups = iaaSSecurityGroups;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "paaSService"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "VMaaSID", unique = true, nullable = false)
	public long getId() {
		return this.Id;
	}

	public void setId(long Id) {
		this.Id = Id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public PaaSService getPaaSService() {
		return this.paaSService;
	}

	public void setPaaSService(PaaSService paaSService) {
		this.paaSService = paaSService;
	}

	@Column(name = "horizontalScalingEnabled", columnDefinition = "bit", nullable = false)
	public boolean isHorizontalScalingEnabled() {
		return this.horizontalScalingEnabled;
	}

	public void setHorizontalScalingEnabled(boolean horizontalScalingEnabled) {
		this.horizontalScalingEnabled = horizontalScalingEnabled;
	}

	@Column(name = "horizontalScaling")
	public Integer getHorizontalScaling() {
		return this.horizontalScaling;
	}

	public void setHorizontalScaling(Integer horizontalScaling) {
		this.horizontalScaling = horizontalScaling;
	}

	@Column(name = "volumeSize", nullable = false)
	public int getVolumeSize() {
		return this.volumeSize;
	}

	public void setVolumeSize(int volumeSize) {
		this.volumeSize = volumeSize;
	}

	@Column(name = "imageName")
	public String getImageName() {
		return this.imageName;
	}

	public void setImageName(String imageName) {
		this.imageName = imageName;
	}

	@Column(name = "keyPairName")
	public String getKeyPairName() {
		return this.keyPairName;
	}

	public void setKeyPairName(String keyPairName) {
		this.keyPairName = keyPairName;
	}

	//TODO: Why ?
	//@ManyToMany(cascade={CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH, CascadeType.DETACH})
	@ManyToMany
    @JoinTable(name="VMaaS_has_IaaSNetwork", 
                joinColumns={@JoinColumn(name="VMaaSID")}, 
                inverseJoinColumns={@JoinColumn(name="IaaSNetworkID")})
	public Set<IaaSNetwork> getIaaSNetworks() {
		return this.iaaSNetworks;
	}

	public void setIaaSNetworks(Set<IaaSNetwork> iaaSNetworks) {
		this.iaaSNetworks = iaaSNetworks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "VMaaS")
	public Set<IaaSSecurityGroup> getIaaSSecurityGroups() {
		return this.iaaSSecurityGroups;
	}

	public void setIaaSSecurityGroups(Set<IaaSSecurityGroup> iaaSSecurityGroups) {
		this.iaaSSecurityGroups = iaaSSecurityGroups;
	}

}
