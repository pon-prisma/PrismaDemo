package it.prisma.dal.entities.paas.services;

// Generated 17-set-2014 21.25.53 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;
import it.prisma.dal.entities.accounting.UserAccount;
import it.prisma.dal.entities.accounting.Workgroup;
import it.prisma.dal.entities.paas.deployments.PaaSDeployment;
import it.prisma.dal.validation.RegexHelper;
import it.prisma.utils.json.JsonUtility;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Pattern;

import org.apache.commons.lang.builder.ToStringBuilder;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * PaaSservice generated by hbm2java
 */
@Entity
@DynamicInsert
@DynamicUpdate
@Table(name = "PaaSService", uniqueConstraints = @UniqueConstraint(columnNames = {
		"name", "workgroupID" }))
public class PaaSService implements java.io.Serializable {

	public enum Status {
		DEPLOY_PENDING, DEPLOY_IN_PROGRESS, RUNNING, ERROR, UNDEPLOY_IN_PROGRESS, STOP_IN_PROGRESS, STOPPED, START_IN_PROGRESS, DELETED, RESTART_IN_PROGRESS
	}

	public enum Operation {
		DEPLOY, UNDEPLOY, START, STOP, RESET, EDIT
	}

	public enum PaaSServiceType {

		DBaaS("DBaaS"), BIaaS("BIaaS"), APPaaS("APPaaS"), APPaaSEnvironment(
				"APPaaSEnvironment"), MQaaS("MQaaS"), VMaaS("VMaaS");
		String name;

		PaaSServiceType(String name) {
			this.name = name;
		}

		public String toString() {
			return name;
		}
	}

	/**
	 * 
	 */
	private static final long serialVersionUID = -2387685601098828457L;
	private Long Id;
	private UserAccount userAccount;
	private PaaSDeployment paaSDeployment;
	private Workgroup workgroup;
	private String type;
	private String name;
	private String description;
	private String status;
	private String operation;
	private String errorDescription;
	private Date createdAt;
	private String domainName;
	private String notificationEmail;
	private Boolean secureConnectionEnabled;
	private String certificatePath;
	private String securityGroup;
	private String IaaSFlavor;
	private Integer loadBalancingInstances;
	private String QoS = "bronze"; // Hack for default value not in DB
	private boolean publicVisibility;
	private String availabilityZone;
	private Set<PaaSServiceEvent> paaSServiceEvents = new HashSet<PaaSServiceEvent>(
			0);
	private Set<PaaSServiceEndpoint> paasServiceEndpoints = new HashSet<PaaSServiceEndpoint>(
			0);

	/**
	 * JSON Serialization of {@link ProductSpecificParameters}.
	 */
	private String productSpecificParametersSerialized;
	/**
	 * An optional type to conveniently hold an actual type for
	 * {@link ProductSpecificParameters}.
	 */
	private Class<? extends ProductSpecificParameters> productSpecificParameterType;

	public PaaSService() {
	}

	public PaaSService(UserAccount userAccount, Workgroup workgroup,
			String type, String name, String description, Date createdAt,
			String IaaSFlavor, String QoS, boolean publicVisibility,
			String availabilityZone) {
		this.userAccount = userAccount;
		this.workgroup = workgroup;
		this.type = type;
		this.name = name;
		this.description = description;
		this.createdAt = createdAt;
		this.IaaSFlavor = IaaSFlavor;
		this.QoS = QoS;
		this.publicVisibility = publicVisibility;
		this.availabilityZone = availabilityZone;
	}

	public PaaSService(UserAccount userAccount, PaaSDeployment paaSDeployment,
			Workgroup workgroup, String type, String name, String description,
			String status, String operation, String errorDescription,
			Date createdAt, String domainName, String notificationEmail,
			Boolean secureConnectionEnabled, String certificatePath,
			String securityGroup, String IaaSFlavor,
			Integer loadBalancingInstances, String QoS,
			boolean publicVisibility, String availabilityZone,
			Set<PaaSServiceEvent> paaSServiceEvents) {
		this.userAccount = userAccount;
		this.paaSDeployment = paaSDeployment;
		this.workgroup = workgroup;
		this.type = type;
		this.name = name;
		this.description = description;
		this.status = status;
		this.operation = operation;
		this.errorDescription = errorDescription;
		this.createdAt = createdAt;
		this.domainName = domainName;
		this.notificationEmail = notificationEmail;
		this.secureConnectionEnabled = secureConnectionEnabled;
		this.certificatePath = certificatePath;
		this.securityGroup = securityGroup;
		this.IaaSFlavor = IaaSFlavor;
		this.loadBalancingInstances = loadBalancingInstances;
		this.QoS = QoS;
		this.publicVisibility = publicVisibility;
		this.availabilityZone = availabilityZone;
		this.paaSServiceEvents = paaSServiceEvents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "PaaSServiceID", unique = true, nullable = false)
	public Long getId() {
		return this.Id;
	}

	public void setId(Long Id) {
		this.Id = Id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userAccountID", nullable = false)
	public UserAccount getUserAccount() {
		return this.userAccount;
	}

	public void setUserAccount(UserAccount userAccount) {
		this.userAccount = userAccount;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "PaaSDeploymentID")
	@JsonManagedReference
	public PaaSDeployment getPaaSDeployment() {
		return this.paaSDeployment;
	}

	public void setPaaSDeployment(PaaSDeployment paaSDeployment) {
		this.paaSDeployment = paaSDeployment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workgroupID", nullable = false)
	public Workgroup getWorkgroup() {
		return this.workgroup;
	}

	public void setWorkgroup(Workgroup workgroup) {
		this.workgroup = workgroup;
	}

	@Column(name = "type", nullable = false, columnDefinition = "enum()")
	@Enumerated(EnumType.STRING)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Pattern(regexp = RegexHelper.ALPHANUMERIC_PATTERN)
	@Column(name = "name", nullable = false, length = 128)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false, length = 2048)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "status", length = 128)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "operation", length = 45)
	public String getOperation() {
		return this.operation;
	}

	public void setOperation(String operation) {
		this.operation = operation;
	}

	@Column(name = "errorDescription", length = 45)
	public String getErrorDescription() {
		return this.errorDescription;
	}

	public void setErrorDescription(String errorDescription) {
		this.errorDescription = errorDescription;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdAt", nullable = false, length = 19, insertable = false, updatable = false)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "domainName", length = 256, unique = true)
	public String getDomainName() {
		return this.domainName;
	}

	public void setDomainName(String domainName) {
		this.domainName = domainName;
	}

	@Column(name = "notificationEmail", length = 256)
	public String getNotificationEmail() {
		return this.notificationEmail;
	}

	public void setNotificationEmail(String notificationEmail) {
		this.notificationEmail = notificationEmail;
	}

	@Column(name = "secureConnectionEnabled", columnDefinition = "bit")
	public Boolean getSecureConnectionEnabled() {
		return this.secureConnectionEnabled;
	}

	public void setSecureConnectionEnabled(Boolean secureConnectionEnabled) {
		this.secureConnectionEnabled = secureConnectionEnabled;
	}

	@Column(name = "certificatePath", length = 256)
	public String getCertificatePath() {
		return this.certificatePath;
	}

	public void setCertificatePath(String certificatePath) {
		this.certificatePath = certificatePath;
	}

	@Column(name = "securityGroup", length = 45)
	public String getSecurityGroup() {
		return this.securityGroup;
	}

	public void setSecurityGroup(String securityGroup) {
		this.securityGroup = securityGroup;
	}

	@Column(name = "IaaSFlavor", length = 256)
	public String getIaaSFlavor() {
		return this.IaaSFlavor;
	}

	public void setIaaSFlavor(String IaaSFlavor) {
		this.IaaSFlavor = IaaSFlavor;
	}

	@Column(name = "loadBalancingInstances")
	public Integer getLoadBalancingInstances() {
		return this.loadBalancingInstances;
	}

	public void setLoadBalancingInstances(Integer loadBalancingInstances) {
		this.loadBalancingInstances = loadBalancingInstances;
	}

	@Column(name = "QoS", length = 64)
	public String getQoS() {
		return this.QoS;
	}

	public void setQoS(String QoS) {
		this.QoS = QoS;
	}

	@Column(name = "publicVisibility", nullable = false, columnDefinition = "bit")
	public boolean isPublicVisibility() {
		return this.publicVisibility;
	}

	public void setPublicVisibility(boolean publicVisibility) {
		this.publicVisibility = publicVisibility;
	}

	@Column(name = "availabilityZone", length = 128)
	public String getAvailabilityZone() {
		return this.availabilityZone;
	}

	public void setAvailabilityZone(String availabilityZone) {
		this.availabilityZone = availabilityZone;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paaSService")
	public Set<PaaSServiceEvent> getPaaSServiceEvents() {
		return this.paaSServiceEvents;
	}

	public void setPaaSServiceEvents(Set<PaaSServiceEvent> paaSServiceEvents) {
		this.paaSServiceEvents = paaSServiceEvents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paasService", cascade = CascadeType.ALL)
	public Set<PaaSServiceEndpoint> getPaasServiceEndpoints() {
		return paasServiceEndpoints;
	}

	public void setPaasServiceEndpoints(
			Set<PaaSServiceEndpoint> paasServiceEndpoint) {
		this.paasServiceEndpoints = paasServiceEndpoint;
	}

	/**
	 * Private method, used to convert <code>productSpecificParameters</code> to
	 * BLOB, for DB storage.
	 * 
	 * @return
	 */
	@Lob
	@Column(name = "productSpecificParameters", length = Integer.MAX_VALUE - 1)
	private byte[] getproductSpecificParametersAsByteArray() { // not exposed
		return productSpecificParametersSerialized == null ? null
				: productSpecificParametersSerialized.getBytes();
	}

	/**
	 * Private method, used to convert the DB stored BLOB to
	 * <code>productSpecificParameters</code>.
	 * 
	 * @param productSpecificParametersAsByteArray
	 */
	@SuppressWarnings("unused")
	private void setproductSpecificParametersAsByteArray(
			byte[] productSpecificParametersAsByteArray) { // not exposed
		if (productSpecificParametersAsByteArray == null)
			return;

		this.productSpecificParametersSerialized = new String(
				productSpecificParametersAsByteArray);
	}

	/**
	 * 
	 * @param type
	 *            the actual type for {@link ProductSpecificParameters}.
	 *            <b>Needed for deserialization !</b>.
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("unchecked")
	@Transient
	public <E extends ProductSpecificParameters> E getProductSpecificParameters(
			Class<E> type) throws Exception {
		if (productSpecificParametersSerialized == null)
			return null;

		if (type == null)
			throw new IllegalArgumentException(
					"A concrete ProductSpecificParameters subtype MUST be provided to the method or the class in order to deserialize data.");

		return (E) JsonUtility.deserializeJson(
				productSpecificParametersSerialized, type);
	}

	/**
	 * The actual type for {@link ProductSpecificParameters} will be the last
	 * set by {@link PaaSService#setProductSpecificParameterType(Class)}. <br/>
	 * <b>If not set, an exception will be thrown !</b>
	 * 
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("unchecked")
	@Transient
	public <E extends ProductSpecificParameters> E getProductSpecificParameters()
			throws Exception {
		return (E) getProductSpecificParameters(productSpecificParameterType);
	}

	@Transient
	public <E extends ProductSpecificParameters> void setProductSpecificParameters(
			E productSpecificParametersSerialized) throws Exception {
		this.productSpecificParametersSerialized = JsonUtility
				.serializeJson(productSpecificParametersSerialized);
		
		setProductSpecificParameterType(productSpecificParametersSerialized.getClass());
	}

	/**
	 * An optional type to conveniently hold an actual type for
	 * ProductSpecificParameters.
	 * 
	 * @return
	 */
	public Class<? extends ProductSpecificParameters> getProductSpecificParameterType() {
		return productSpecificParameterType;
	}

	/**
	 * An optional type to conveniently hold an actual type for
	 * ProductSpecificParameters.
	 * 
	 * @param productSpecificParameterType
	 */
	public void setProductSpecificParameterType(
			Class<? extends ProductSpecificParameters> productSpecificParameterType) {
		this.productSpecificParameterType = productSpecificParameterType;
	}
	
	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}
}
