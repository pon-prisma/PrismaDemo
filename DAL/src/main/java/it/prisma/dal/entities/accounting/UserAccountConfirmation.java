package it.prisma.dal.entities.accounting;
// default package
// Generated Oct 9, 2014 2:09:59 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * UserAccountConfirmation generated by hbm2java
 */
@Entity
@Table(name = "UserAccountConfirmation", uniqueConstraints = @UniqueConstraint(columnNames = "token"))
public class UserAccountConfirmation implements java.io.Serializable {

	private static final long serialVersionUID = -284398506683573396L;
	private long userAccountConfirmationId;
	private UserAccount userAccount;
	private String token;
	private boolean valid;
	private Date createdAt;
	private Date expiresOn;

	public UserAccountConfirmation() {
	}

	public UserAccountConfirmation(UserAccount userAccount, String token, boolean valid,
			Date createdAt, Date expiresOn) {
		this.userAccount = userAccount;
		this.token = token;
		this.valid = valid;
		this.createdAt = createdAt;
		this.expiresOn = expiresOn;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userAccountConfirmationID", unique = true, nullable = false)
	public long getId() {
		return this.userAccountConfirmationId;
	}

	public void setId(long userAccountConfirmationId) {
		this.userAccountConfirmationId = userAccountConfirmationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userAccountID", nullable = false)
	public UserAccount getUserAccount() {
		return this.userAccount;
	}

	public void setUserAccount(UserAccount userAccount) {
		this.userAccount = userAccount;
	}

	@Column(name = "token", unique = true, nullable = false, length = 45)
	public String getToken() {
		return this.token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	@Column(name = "valid", columnDefinition = "bit", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdAt", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "expiresOn", nullable = false, length = 19)
	public Date getExpiresOn() {
		return this.expiresOn;
	}

	public void setExpiresOn(Date expiresOn) {
		this.expiresOn = expiresOn;
	}

}
