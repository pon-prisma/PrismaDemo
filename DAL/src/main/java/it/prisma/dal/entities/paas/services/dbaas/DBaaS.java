package it.prisma.dal.entities.paas.services.dbaas;

// Generated 30-ott-2014 15.46.21 by Hibernate Tools 4.0.0

import it.prisma.dal.entities.paas.services.AbstractPaaSService;
import it.prisma.dal.entities.paas.services.PaaSService;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * DBaaS generated by hbm2java
 */
@Entity
@Table(name = "DBaaS")
public class DBaaS extends AbstractPaaSService implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8927846975214355414L;
	private long Id;
	private PaaSService paaSService;
	private String productType;
	private String productVersion;
	private int diskSize;
	private boolean diskEncryptionEnabled;
	private boolean verticalScalingEnabled;
	private String verticalScalingMaxFlavor;
	private Integer verticalScalingMaxDiskSize;
	private boolean backupEnabled;
	private Integer backupInterval;

	public DBaaS() {
	}

	public DBaaS(PaaSService paaSService, String productType,
			String productVersion, int diskSize, boolean diskEncryptionEnabled,
			boolean verticalScalingEnabled, boolean backupEnabled) {
		this.paaSService = paaSService;
		this.productType = productType;
		this.productVersion = productVersion;
		this.diskSize = diskSize;
		this.diskEncryptionEnabled = diskEncryptionEnabled;
		this.verticalScalingEnabled = verticalScalingEnabled;
		this.backupEnabled = backupEnabled;
	}

	public DBaaS(PaaSService paaSService, String productType,
			String productVersion, int diskSize, boolean diskEncryptionEnabled,
			boolean verticalScalingEnabled, String verticalScalingMaxFlavor,
			Integer verticalScalingMaxDiskSize, boolean backupEnabled,
			Integer backupInterval) {
		this.paaSService = paaSService;
		this.productType = productType;
		this.productVersion = productVersion;
		this.diskSize = diskSize;
		this.diskEncryptionEnabled = diskEncryptionEnabled;
		this.verticalScalingEnabled = verticalScalingEnabled;
		this.verticalScalingMaxFlavor = verticalScalingMaxFlavor;
		this.verticalScalingMaxDiskSize = verticalScalingMaxDiskSize;
		this.backupEnabled = backupEnabled;
		this.backupInterval = backupInterval;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "paaSService"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "DBaaSID", unique = true, nullable = false)
	public long getId() {
		return this.Id;
	}

	public void setId(long Id) {
		this.Id = Id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public PaaSService getPaaSService() {
		return this.paaSService;
	}

	public void setPaaSService(PaaSService paaSService) {
		this.paaSService = paaSService;
	}

	@Column(name = "productType", nullable = false, length = 128)
	public String getProductType() {
		return this.productType;
	}

	public void setProductType(String productType) {
		this.productType = productType;
	}

	@Column(name = "productVersion", nullable = false, length = 128)
	public String getProductVersion() {
		return this.productVersion;
	}

	public void setProductVersion(String productVersion) {
		this.productVersion = productVersion;
	}

	@Column(name = "diskSize", nullable = false)
	public int getDiskSize() {
		return this.diskSize;
	}

	public void setDiskSize(int diskSize) {
		this.diskSize = diskSize;
	}

	@Column(name = "diskEncryptionEnabled", nullable = false, columnDefinition = "bit")
	public boolean isDiskEncryptionEnabled() {
		return this.diskEncryptionEnabled;
	}

	public void setDiskEncryptionEnabled(boolean diskEncryptionEnabled) {
		this.diskEncryptionEnabled = diskEncryptionEnabled;
	}

	@Column(name = "verticalScalingEnabled", nullable = false, columnDefinition = "bit")
	public boolean isVerticalScalingEnabled() {
		return this.verticalScalingEnabled;
	}

	public void setVerticalScalingEnabled(boolean verticalScalingEnabled) {
		this.verticalScalingEnabled = verticalScalingEnabled;
	}

	@Column(name = "verticalScalingMaxFlavor", length = 128)
	public String getVerticalScalingMaxFlavor() {
		return this.verticalScalingMaxFlavor;
	}

	public void setVerticalScalingMaxFlavor(String verticalScalingMaxFlavor) {
		this.verticalScalingMaxFlavor = verticalScalingMaxFlavor;
	}

	@Column(name = "verticalScalingMaxDiskSize")
	public Integer getVerticalScalingMaxDiskSize() {
		return this.verticalScalingMaxDiskSize;
	}

	public void setVerticalScalingMaxDiskSize(Integer verticalScalingMaxDiskSize) {
		this.verticalScalingMaxDiskSize = verticalScalingMaxDiskSize;
	}

	@Column(name = "backupEnabled", nullable = false, columnDefinition = "bit")
	public boolean isBackupEnabled() {
		return this.backupEnabled;
	}

	public void setBackupEnabled(boolean backupEnabled) {
		this.backupEnabled = backupEnabled;
	}

	@Column(name = "backupInterval")
	public Integer getBackupInterval() {
		return this.backupInterval;
	}

	public void setBackupInterval(Integer backupInterval) {
		this.backupInterval = backupInterval;
	}

}
